SecDebugLog /dev/stdout
SecDebugLogLevel 1
SecRule RESPONSE_BODY "/soap:Body" "id:1,phase:5,deny"
SecRule ARGS|REQUEST_HEADERS "@rx <script>" "id:101,msg:'XSS Attack',severity:ERROR,deny,status:404"
SecRule REQUEST_URI "@streq /wp-config.php" "id:102,phase:1,t:lowercase,deny"



SecRule ARGS|REQUEST_HEADERS "@rx <script>" "id:101,msg:'XSS Attack',severity:ERROR,deny,status:404"




Basic Rules:

SecRuleEngine DetectionOnly
SecRequestBodyAccess On
SecRuleEngine On
SecDebugLogLevel 9
SecDefaultAction "phase:1,log,auditlog,deny,status:403"
SecDefaultAction "phase:2,log,auditlog,deny,status:403"




Righe funzionanti in YAML:
"SecRuleEngine DetectionOnly"
"SecRequestBodyAccess On"
"SecRuleEngine On"
"SecDebugLogLevel 9"
"SecRule ARGS|REQUEST_HEADERS \"@rx <script>\" \"id:101,msg:\\'XSS Attack\\',severity:CRITICAL,deny,status:403\""


"SecRule ARGS|REQUEST_HEADERS|REQUEST_BODY \"@rx <script>\" \"id:40,msg:\\'XSS Attack\\',severity:CRITICAL,deny,status:403\""

REQUEST_BODY 
ma ARGS dovrebbe valere anche sul POST


"SecRule ARGS|REQUEST_HEADERS|REQUEST_BODY \"@rx pippo\" \"id:40,msg:\\'XSS Attack\\',severity:CRITICAL,deny,status:403\""


------------------------------------------------

Rule working on Body:
"SecRule REQUEST_BODY \"@rx pippo\" \"id:103,phase:2,t:lowercase,deny\""

senza phase 2 specificata le regole non funzionano sul REQUEST_BODY
"SecRule ARGS|REQUEST_HEADERS|REQUEST_BODY \"@rx pippo\" \"id:40,msg:\\'XSS Attack\\',severity:CRITICAL,deny,status:403\""

provare decode del body:
"SecRule ARGS|REQUEST_HEADERS|REQUEST_BODY \"@rx <script>\" \"id:40,msg:\\'XSS Attack\\',severity:CRITICAL,deny,status:403\""



Provabile questo @contains:
SecRule REQUEST_BODY "@contains pippo"
