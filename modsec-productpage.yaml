apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: modsec-productpage
  namespace: bookinfoextended
spec:
  workloadSelector:
    labels:
      app: productpage
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
      proxy:
        proxyVersion: ^1\.*.*
    patch:
      operation: INSERT_BEFORE
      value:
        name: istio.modsec-productpage
        config_discovery:
          config_source:
            ads: {}
            initial_fetch_timeout: 0s # wait indefinitely to prevent bad Wasm fetch
          type_urls: [ "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: modsec-productpage-config
  namespace: bookinfoextended
spec:
  workloadSelector:
    labels:
      app: productpage
  configPatches:
  - applyTo: EXTENSION_CONFIG
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: ADD
      value:
        name: istio.modsec-productpage
        typed_config:
          '@type': type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
          value:
           config:
             vm_config:
               vm_id: basic-auth
               runtime: envoy.wasm.runtime.v8
               code:
                 remote:
                   http_uri:
                      uri: https://github.com/M4tteoP/wasm-repo/raw/main/wipbasemodsec.wasm
                    # sha256: 6b0cecad751940eeedd68de5b9bcf940d0aac8bfc5f61c18d71985ee9460ee77
                    # Optional: specifying sha256 checksum will let istio agent verify the checksum of downloaded artifacts.
                    # It is **highly** recommended to provide the checksum, since missing checksum will cause the Wasm module to be downloaded repeatedly.
                    # To compute the sha256 checksum of a Wasm module, download the module and run `sha256sum` command with it.
                    # sha256: <WASM-MODULE-SHA>
             # The configuration for the Wasm extension itself
             configuration:
               '@type': type.googleapis.com/google.protobuf.StringValue
               value: |
                 {
                   "modsec_config": [
                     {
                       "enable_default": "yes",
                       "enable_sqli": "no",
                       "enable_xss": "yes",
                       "custom_rules":[
                       "SecRule ARGS \"@rx pippo\" \"id:103,phase:1,t:lowercase,deny\""
                       ]
                     }
                   ]
                 }